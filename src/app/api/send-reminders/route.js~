import { NextResponse } from 'next/server';
import nodemailer from 'nodemailer';
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

export async function POST() {
    try {
        const debtors = await prisma.debtor.findMany({
            where: {
                availableForNotify: true,
            },
            include: {
                user: true,
            },
        });

        if (debtors.length === 0) {
            return NextResponse.json({ message: 'No debtors to notify.' }, { status: 200 });
        }

        const transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: process.env.EMAIL_USER,
                pass: process.env.EMAIL_PASS,
            },
        });

        for (const debtor of debtors) {
            if (!debtor.email) continue;

            await transporter.sendMail({
                from: `"Debt Reminder" <${process.env.EMAIL_USER}>`,
                to: debtor.email,
                subject: 'Payment Reminder',
                text: `Hi ${debtor.name},\n\nThis is a reminder that you owe $${debtor.amountOwed}.\n\nPlease make the payment as soon as possible.\n\nThank you.`,
            });
        }

        return NextResponse.json({ message: 'Reminders sent.' }, { status: 200 });
    } catch (error) {
        console.error('Error sending reminders:', error);
        return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });
    }
}